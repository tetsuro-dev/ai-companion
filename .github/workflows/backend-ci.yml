name: Backend CI/CD

on:
  push:
    branches: [ main ]
    paths:
      - 'backend/**'
      - '.github/workflows/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'backend/**'
      - '.github/workflows/**'

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    
    env:
      PYTHONPATH: ${{ github.workspace }}/backend
      OPENAI_API_KEY: test_openai_key
      AZURE_SPEECH_KEY: test_azure_key
      ZONOS_API_KEY: test_zonos_key

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: Install dependencies
      working-directory: ./backend
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install flake8 pylint mypy pytest-cov bandit
        
    - name: Run tests
      working-directory: ./backend
      run: |
        # Run tests with coverage
        python -m pytest tests/integration/test_api_pipeline.py -v --cov=app --cov-report=xml

    - name: Run linting (informational)
      working-directory: ./backend
      continue-on-error: true
      run: |
        # Run linting tools but don't fail the build
        echo "Running linting checks (warnings only)..."
        python -m flake8 app tests || echo "Flake8 completed with warnings"
        python -m pylint app tests || echo "Pylint completed with warnings"
        python -m mypy app tests || echo "Mypy completed with warnings"
        echo "All checks completed. See above for any warnings."
        echo "Linting completed with warnings"
        
    - name: Run security scan
      working-directory: ./backend
      run: |
        bandit -r app/
        
    - name: Run tests with coverage
      working-directory: ./backend
      run: |
        pytest tests/integration/test_api_pipeline.py -v --cov=app --cov-report=xml
        
    - name: Upload coverage report
      uses: codecov/codecov-action@v3
      with:
        file: ./backend/coverage.xml
        flags: backend
        name: backend-coverage
