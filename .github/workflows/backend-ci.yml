name: Backend CI

on:
  push:
    branches: [ main ]
    paths:
      - 'backend/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'backend/**'

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    
    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      AZURE_SPEECH_KEY: ${{ secrets.AZURE_SPEECH_KEY }}
      ZONOS_API_KEY: ${{ secrets.ZONOS_API_KEY }}

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: Install dependencies
      working-directory: ./backend
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install flake8 pylint mypy pytest-cov bandit
        
    - name: Run linting
      working-directory: ./backend
      run: |
        flake8 app tests || true  # Continue even if there are warnings
        pylint app tests || true  # Continue even if there are warnings
        mypy app tests || true  # Continue even if there are warnings
        
    - name: Run security scan
      working-directory: ./backend
      run: |
        bandit -r app/
        
    - name: Run tests with coverage
      working-directory: ./backend
      run: |
        pytest tests/integration/test_api_pipeline.py -v --cov=app --cov-report=xml
        
    - name: Upload coverage report
      uses: codecov/codecov-action@v3
      with:
        file: ./backend/coverage.xml
        flags: backend
        name: backend-coverage
